[user]
    name = Connor Kelly
    email = connor.r.kelly@gmail.com
    signingkey = 588D34E7812BC0B7
[color]
	diff = auto
	status = auto
	branch = auto
	ui = auto
[core]
	autocrlf = input
	whitespace = trailing-space,space-before-tab
[pull]
    rebase = true
[rebase]
    autoStash = true
[push]
	default = simple
[rerere]
	enabled = true
[alias]
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    new-feature = "!nf() { git diff-index --quiet HEAD; if [ $? != 0 ]; then echo 'Index is dirty'; return 1; else git checkout master && git pull --quiet --rebase && git checkout -b $@ && git push -u origin $@; fi }; nf"
    dirty = "!d() { git diff-index --quiet HEAD; if [ $? != 0 ]; then echo 'Index is dirty'; return 1; else git checkout master && git pull --rebase && git checkout -b $@; fi }; d"
#    done = !f() { ref=$(git symbolic-ref HEAD); if [[ $? != 0 ]]; then echo "Index is dirty"; return 1; else git branch -m ${ref#refs/heads/} ${ref#refs/heads/}-done; fi }
    closeout = "!cl() { git diff-index --quiet HEAD; if [ $? != 0 ]; then echo "Index is dirty"; return 1; else git checkout $@ && git fetch origin $@; if [ $(git rev-list --count $@..FETCH_HEAD) != 0 ]; then echo "Upstream $@ is ahead of local" return 1; fi; git checkout master && git merge $@ && git push && git branch -d $@ && git push origin :$@; fi }; cl"
    update = "!u() { git stash && git fetch && git lg HEAD..FETCH_HEAD && git pull --rebase && git stash pop; }; u"
    lb = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'
[diff]
	renames = copies
[merge]
	stat = true
[include]
    path = ~/.secret-gitconfig
    path = ~/.config/git/gitconfig
[submodule]
    recurse = true
